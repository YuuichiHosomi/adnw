#!/bin/bash
#
# git pre-commit hook to check sources with astyle.
#
# Only changed files are checked and commit is allowed even on errors.
#
# @TODO: 
#   - check effects on rebase and the like if not just warning
#
# Manual:
# cp .astyle.rc /tmp
# git filter-branch -f --tree-filter 'astyle --options=/tmp/.astyle.rc -R "src/*.h" "src/*.c"' master..HEAD
#

indent() {
	sed 's/^/       /'
}

# Check for existence of astyle, and error out if not present.
if [ ! -x "$(which astyle)" ]; then
	echo "git pre-commit hook:"
	echo "Did not find astyle, please install it before continuing."
	exit 1
fi

ASTYLE_PARAMETERS="--options=.astyle.rc"

# to exclude LUFA/ only files below src are checked
FILE_PATTERN="^src/*/.*\.(c|cpp|h)$"
RET=0

echo "-----> Checking code with astyle"
for file in `git diff-index --cached --name-only HEAD --diff-filter=ACMR |  egrep $FILE_PATTERN`; do
	# nf is the temporary checkout. This makes sure we check against the
	# revision in the index (and not the checked out version).
	temp_checkout=`git checkout-index --temp ${file} | cut -f 1`
	formatted=`mktemp /tmp/${temp_checkout}.XXX.formatted` || exit 1
	diff=`mktemp /tmp/${temp_checkout}.XXX.diff` || exit 1
	astyle ${ASTYLE_PARAMETERS} < $temp_checkout > $formatted 2>/dev/null
	failed=$?
	diff -u -p "${temp_checkout}" "${formatted}" > ${diff}
	different=$?
	if [ $failed != 0 ]; then
		echo "       `astyle` failed on: $file"
		echo "       Please investigate this situation. You'll want:"
		echo
		echo "       astyle ${ASTYLE_PARAMETERS} $file"
	elif [ $different != 0 ]; then
		echo "       Code style error in: $file"
		RET=1
	else
		rm "${temp_checkout}" "${formatted}" "${diff}"
	fi
done

if [ "$RET" == "0" ]; then 
    echo "       astyle passed"
else
    echo "       astyle FAILED, please run next command and amend commit to fix _ALL_ files."
    echo "astyle --options=.astyle.rc \$(find src/ -name \"*.[ch]\")"
    # uncomment this to abort commit on astyle error
    #exit $RET 
fi

